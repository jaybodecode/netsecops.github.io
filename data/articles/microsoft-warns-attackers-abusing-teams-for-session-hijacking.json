{
  "id": "0bb44782-ac74-4ed4-bbf3-0ce592482d6d",
  "slug": "microsoft-warns-attackers-abusing-teams-for-session-hijacking",
  "headline": "Microsoft Warns of Attackers Abusing Teams for Session Hijacking",
  "title": "Threat Actor Storm-2372 Abusing Microsoft Teams for Malware Delivery and Session Hijacking, Microsoft Warns",
  "summary": "Microsoft has issued a warning about a threat actor group, tracked as Storm-2372, that is abusing legitimate Microsoft Teams features for cyberattacks. In a report on October 7, 2025, Microsoft detailed how the group uses social engineering within Teams chats and file sharing to deliver malware, trick users into fraudulent authentication flows, and ultimately steal access tokens to hijack user sessions. The attacks are effective because they originate from within the trusted Teams environment, making users more likely to fall for the lures.",
  "full_report": "## Executive Summary\n**[Microsoft](https://www.microsoft.com/security)** has identified a campaign by the threat actor **Storm-2372** that abuses legitimate functionalities within **[Microsoft Teams](https://www.microsoft.com/en-us/microsoft-teams/group-chat-software)** to conduct social engineering attacks. The primary goals of the campaign are to steal authentication tokens and hijack user sessions. By leveraging the trusted nature of the Teams platform, attackers are able to send malicious files and links that users are more likely to interact with. This tactic bypasses traditional email security gateways and exploits the inherent trust users place in internal communication tools. Security teams are advised to increase monitoring of Teams-related authentication and OAuth activity.\n\n---\n\n## Threat Overview\nThe threat actor, Storm-2372, initiates attacks by sending messages or files directly to targets within Microsoft Teams. These messages may originate from externally connected accounts or potentially from already compromised internal accounts. The core of the attack involves tricking a user into a malicious action, such as clicking a link or opening a file, which initiates a fraudulent process.\n\nThe attackers are specifically abusing device code authentication flows. This method involves presenting the user with a code and a URL. The user is instructed to open the URL on another device (like their phone) and enter the code to grant the attacker's application access to their account. Because the request appears to be part of a legitimate workflow within Teams, users may approve it without realizing they are granting an attacker persistent access to their account.\n\n---\n\n## Technical Analysis\nThe campaign's TTPs focus on abusing application features and social engineering:\n\n*   **Initial Access/Execution:**\n    *   [`T1566.002 - Spearphishing Link`](https://attack.mitre.org/techniques/T1566/002/): Attackers send malicious links through Teams chat, a vector that is often less scrutinized than email.\n    *   [`T1204.002 - User Execution: Malicious File`](https://attack.mitre.org/techniques/T1204/002/): Malicious files are shared directly through Teams, leveraging the platform's file-sharing feature.\n*   **Credential Access:**\n    *   [`T1650 - Acquire Access Token`](https://attack.mitre.org/techniques/T1650/): The primary goal is to steal OAuth access tokens by tricking users into completing a device authentication flow for a malicious application.\n    *   [`T1539 - Steal Web Session Cookie`](https://attack.mitre.org/techniques/T1539/): Once an access token is stolen, the attacker can use it to hijack the user's active session and access resources as that user.\n*   **Defense Evasion:**\n    *   [`T1070.004 - Indicator Removal: File Deletion`](https://attack.mitre.org/techniques/T1070/004/): Attackers may delete their initial messages or files from Teams to hide their tracks.\n\n---\n\n## Impact Assessment\n*   **Account Takeover:** The most direct impact is the complete takeover of the victim's Teams account and any other Microsoft 365 services accessible via the stolen token.\n*   **Data Exfiltration:** Attackers can access and exfiltrate sensitive data from SharePoint, OneDrive, and private chats.\n*   **Internal Phishing:** The compromised account becomes a highly effective platform for launching further social engineering attacks against other employees, as messages will come from a trusted internal source.\n*   **Business Email Compromise (BEC):** The access could be leveraged to conduct financial fraud by impersonating the compromised employee.\n\n---\n\n## IOCs\nNo specific Indicators of Compromise were provided in the source articles.\n\n---\n\n## Cyber Observables for Detection\nDFIR teams should hunt for the following:\n\n| Type | Value | Description |\n|---|---|---|\n| Log Source | Azure AD Sign-in Logs | Monitor for sign-in events with `Device code` authentication flow, especially from unexpected locations or for unusual applications. |\n| API Endpoint | `https://login.microsoftonline.com/common/oauth2/deviceauth` | Look for an unusual number of requests to the device authentication endpoint. |\n| Log Source | Microsoft 365 Unified Audit Log | Search for `Consent to application` events, looking for users granting permissions to new or unfamiliar applications. |\n| User Account Pattern | Anomalous external user chats | Monitor for a spike in chat invitations from external tenants, which could be a precursor to a widespread campaign. |\n\n---\n\n## Detection & Response\n*   **Audit Azure AD Logs:** Security teams must closely monitor Azure Active Directory sign-in logs. Filter for `Device code` authentication events and investigate any that seem anomalous. D3FEND's **[Authentication Event Thresholding (D3-ANET)](https://d3fend.mitre.org/technique/d3f:AuthenticationEventThresholding)** can help automate this.\n*   **Review OAuth Consents:** Regularly audit application consent grants in the Microsoft 365 Unified Audit Log. Look for users granting consent to newly created or suspicious-looking multi-tenant apps.\n*   **User-Reported Phishing:** Encourage users to report any suspicious messages or file shares within Teams, even if they come from apparently internal colleagues.\n*   **Session Revocation:** If a compromise is suspected, immediately revoke all refresh tokens for the affected user account in Azure AD to terminate the attacker's session.\n\n---\n\n## Mitigation\n*   **User Training (M1017):** Educate users specifically on the risks of social engineering within collaboration platforms like Teams. Show them what a device code authentication prompt looks like and instruct them to never approve one they did not initiate themselves.\n*   **Configure External Access Policies:** Restrict the ability of users to communicate with all external tenants. Configure an allow-list for trusted external organizations only. This is an application of **[Application Configuration Hardening (D3-ACH)](https://d3fend.mitre.org/technique/d3f:ApplicationConfigurationHardening)**.\n*   **Configure Application Consent Policies (M1054):** In Azure AD, configure user consent settings to prevent users from consenting to applications from unverified publishers or applications that are not on an approved list. This directly blocks the malicious app registration part of the attack.\n*   **Conditional Access Policies:** Implement strict Conditional Access policies that require compliant devices or trusted locations for accessing corporate resources, which can help block session hijacking attempts from untrusted attacker machines.",
  "twitter_post": "Microsoft warns threat actor Storm-2372 is abusing Teams for session hijacking. Attackers use chats & file sharing to steal auth tokens. Review your Teams OAuth activity now! ðŸ’¬ #MicrosoftTeams #CyberSecurity #SessionHijacking",
  "meta_description": "Microsoft warns of threat actor Storm-2372 abusing legitimate Microsoft Teams features to deliver malware, steal authentication tokens, and hijack user sessions.",
  "category": [
    "Phishing",
    "Threat Actor",
    "Cloud Security"
  ],
  "severity": "medium",
  "entities": [
    {
      "name": "Microsoft",
      "type": "vendor",
      "url": "https://www.microsoft.com/security"
    },
    {
      "name": "Storm-2372",
      "type": "threat_actor"
    },
    {
      "name": "Microsoft Teams",
      "type": "product",
      "url": "https://www.microsoft.com/en-us/microsoft-365/microsoft-teams/group-chat-software"
    }
  ],
  "cves": [],
  "sources": [
    {
      "url": "https://www.digitalforensicsmagazine.com/news-roundup-8th-october-2025/",
      "title": "NEWS ROUNDUP â€“ 8th October 2025",
      "date": "2025-10-08",
      "friendly_name": "Digital Forensics Magazine",
      "website": "digitalforensicsmagazine.com"
    },
    {
      "url": "https://www.youtube.com/watch?v=kYcI943Y_s8",
      "title": "Daily Cyber News â€“ October 8th, 2025",
      "date": "2025-10-08",
      "friendly_name": "YouTube",
      "website": "youtube.com"
    },
    {
      "url": "https://www.thaicert.or.th/alerts/A-2025-10-07-01.html",
      "title": "Oracle Confirms Cl0p Ransomware Group Exploited Zero-Day (CVE-2025-61882) to Attack E-Business Suite Customers",
      "date": "2025-10-07",
      "friendly_name": "ThaiCERT",
      "website": "thaicert.or.th"
    }
  ],
  "events": [
    {
      "datetime": "2025-10-07T00:00:00Z",
      "summary": "Microsoft publishes a report detailing the abuse of Teams by the threat actor Storm-2372."
    }
  ],
  "mitre_techniques": [
    {
      "id": "T1566.002",
      "name": "Spearphishing Link",
      "tactic": "Initial Access"
    },
    {
      "id": "T1650",
      "name": "Acquire Access Token",
      "tactic": "Credential Access"
    },
    {
      "id": "T1539",
      "name": "Steal Web Session Cookie",
      "tactic": "Credential Access"
    }
  ],
  "mitre_mitigations": [
    {
      "id": "M1017",
      "name": "User Training",
      "description": "Train users to be suspicious of unexpected authentication prompts or file shares, even within trusted applications like Microsoft Teams."
    },
    {
      "id": "M1054",
      "name": "Software Configuration",
      "d3fend_techniques": [
        {
          "id": "D3-ACH",
          "name": "Application Configuration Hardening",
          "url": "https://d3fend.mitre.org/technique/d3f:ApplicationConfigurationHardening"
        }
      ],
      "description": "Configure application consent policies in Azure AD to prevent users from granting permissions to unauthorized or unverified applications."
    },
    {
      "id": "M1037",
      "name": "Filter Network Traffic",
      "description": "Configure Teams external access policies to restrict communication to an allow-list of trusted external organizations, limiting the initial attack surface."
    }
  ],
  "d3fend_countermeasures": [
    {
      "technique_id": "D3-ACH",
      "technique_name": "Application Configuration Hardening",
      "url": "https://d3fend.mitre.org/technique/d3f:ApplicationConfigurationHardening",
      "recommendation": "To directly counter the Storm-2372 campaign, administrators must harden Microsoft Teams and Azure AD application consent settings. First, configure Teams external access policies to block communication from all external tenants by default, and only add trusted partner organizations to an allow-list. This severely limits the attacker's ability to initiate contact. Second, and more critically, configure Azure AD 'User consent settings' to prevent users from granting consent to applications. Instead, enable the 'admin consent workflow' so that all requests for new application permissions are routed to administrators for review. This single change would have blocked the device code authentication flow attack, as the user would not have had the rights to approve the malicious application's access to their account.",
      "mitre_mitigation_id": "M1054"
    },
    {
      "technique_id": "D3-ANET",
      "technique_name": "Authentication Event Thresholding",
      "url": "https://d3fend.mitre.org/technique/d3f:AuthenticationEventThresholding",
      "recommendation": "Implement automated detection rules in your SIEM (like Microsoft Sentinel) to monitor and alert on suspicious authentication events related to this attack. Create a rule that specifically triggers on 'Device code' authentications in Azure AD sign-in logs. The alert should be enriched with contextual information like the user's location, IP address, and the application requesting consent. A high-severity alert should be generated if a device code authentication is completed from an IP address outside the user's typical geolocation or if it's for a newly created or previously unseen application. This provides an automated, near-real-time detection of a potential session token theft in progress, allowing the SOC to quickly investigate and revoke the user's session tokens before significant damage occurs.",
      "mitre_mitigation_id": "M1040"
    },
    {
      "technique_id": "D3-WSAA",
      "technique_name": "Web Session Activity Analysis",
      "url": "https://d3fend.mitre.org/technique/d3f:WebSessionActivityAnalysis",
      "recommendation": "For post-compromise detection, use a Cloud Access Security Broker (CASB) or Microsoft Defender for Cloud Apps to analyze web session activity. Once an attacker hijacks a session using a stolen token, their behavior will likely differ from the legitimate user. Configure UBA policies to detect impossible travel (e.g., the user's account is accessed from two distant locations simultaneously), anomalous data access (e.g., mass file downloads from SharePoint), or suspicious configuration changes (e.g., creating a new mail forwarding rule). These policies analyze the activity within the hijacked session, providing a secondary layer of detection that can catch the attacker even if the initial token theft was missed. This is crucial for identifying the blast radius of a compromised account and initiating the incident response process.",
      "mitre_mitigation_id": "M1040"
    }
  ],
  "iocs": [],
  "cyber_observables": [
    {
      "type": "log_source",
      "value": "Azure AD Sign-in Logs",
      "description": "The primary source for detecting this attack. Filter for sign-ins where the authentication method is 'Device code'.",
      "context": "Azure Portal, Microsoft Sentinel",
      "confidence": "high"
    },
    {
      "type": "log_source",
      "value": "Microsoft 365 Unified Audit Log",
      "description": "Search for 'Consent to application' events. A spike in these events, especially for new or unknown applications, is a strong indicator.",
      "context": "Microsoft Purview, SIEM",
      "confidence": "high"
    },
    {
      "type": "command_line_pattern",
      "value": "User interaction with login.microsoft.com/common/oauth2/deviceauth",
      "description": "Users being directed to this URL is part of the malicious device code flow. Browser history or proxy logs can reveal this.",
      "context": "Proxy logs, EDR browser history analysis",
      "confidence": "medium"
    }
  ],
  "tags": [
    "Session Hijacking",
    "Token Theft",
    "OAuth",
    "Social Engineering",
    "Cloud Security"
  ],
  "extract_datetime": "2025-10-08T15:00:00.000Z",
  "article_type": "Advisory",
  "impact_scope": {
    "geographic_scope": "global",
    "other_affected": [
      "Microsoft Teams users"
    ]
  },
  "pub_date": "2025-10-08",
  "reading_time_minutes": 4,
  "createdAt": "2025-10-08T15:00:00.000Z",
  "updatedAt": "2025-10-08T15:00:00.000Z"
}